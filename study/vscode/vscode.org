#+TITLE: vscode-study历程
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../style/my-org-worg.css" />



* Golang开发环境搭建
** 安装golang相关工具
+ golang.org/x/tools的安装
#+BEGIN_EXAMPLE
golang.org/x/tools = github.com/golang/tools
mkdir  %GOPATH%\src\golang.org\x
cd %GOPATH%\src\golang.org\x
git clone https://github.com/golang/tools.git
以后git pull 更新
#+END_EXAMPLE

+ golint安装
#+BEGIN_EXAMPLE
方式一：
go get -v -u -x github.com/golang/lint/golint
#+END_EXAMPLE

+ 安装goreturns
#+BEGIN_EXAMPLE
两种方式安装
方式一：
go get -u -v -x sourcegraph.com/sqs/goreturns

方式二：
mkdir  %GOPATH%\src\sourcegraph.com\sqs\goreturns
cd %GOPATH%\src\sourcegraph.com\sqs\goreturns
git clone https://github.com/sqs/goreturns
go install sourcegraph.com\sqs\goreturns
#+END_EXAMPLE

+ 安装go-outline
#+BEGIN_EXAMPLE
go get -u -v -x github.com/lukehoban/go-outline
#+END_EXAMPLE


+ 安装gopkgs
#+BEGIN_EXAMPLE
go get -u -v -x github.com/tpng/gopkgs
#+END_EXAMPLE

+ 安装gometalinter
#+BEGIN_EXAMPLE
go get -u -v -x github.com/alecthomas/gometalinter
#+END_EXAMPLE

+ 安装gocode
#+BEGIN_EXAMPLE
go get -u -v -x github.com/nsf/gocode
#+END_EXAMPLE


+ 安装godef
#+BEGIN_EXAMPLE
go get -u -v -x github.com/rogpeppe/godef
#+END_EXAMPLE


* Golang开发环境搭建
** Linux
  + 安装Golang
#+BEGIN_EXAMPLE
sudo apt-get install golang

bash shell:
vim ~/.bashrc
export GOPATH=~/Projects/lescpsn/golang

fish  shell:
vim  ~/.config/fish/config.fish (若没有，直接创建该文件)
set -x GOPATH ~/Projects/lescpsn/golang

mkdir $GOPATH/src
mkdir $GOPATH/bin
mkdir $GOPATH/pkg
#+END_EXAMPLE


* Golang工程开发工具
+ 配置开发工具的环境变量
#+BEGIN_EXAMPLE
vim .bashrc
export PATH=$PATH:$GOPATH/bin
#+END_EXAMPLE

+ gocode
#+BEGIN_EXAMPLE
代码补全
go get -u -v -x github.com/nsf/gocode
#+END_EXAMPLE

+ godef
#+BEGIN_EXAMPLE
代码跳转
go get -u -v -x github.com/rogpeppe/godef
#+END_EXAMPLE




* issue
+ godef: no declaration found for net.ResolveTCPAddr
#+BEGIN_EXAMPLE
修改github.com\rogpeppe\godef\go\parser\parser.go中源代码,注释掉报错的这行
//name, err := p.pathToName(litToString(path), filepath.Dir(filename))
name, _ := p.pathToName(litToString(path), filepath.Dir(filename))

//p.error(path.Pos(), fmt.Sprintf("cannot find identifier for package %q: %v", litToString(path), err))

重新编译安装一下
go install github.com/rogpeppe/godef
#+END_EXAMPLE

