本文档主要说明ubunt默认安装完成后，如何快速搭建软件开发人员的工具链

一、系统必备软件的安装

    1、修改apt-get数据源为阿里云镜像(mirrors.aliyun.com)
       sudo vim /etc/apt/sources.list
       sudo rm -rf /var/lib/apt/lists/*
       sudo apt-get clean
       sudo apt-get update

    2、openssh-server的安装
       sudo apt-get install openssh-server
       第一步安装openssh-server为了后面可以很方便的用终端软件（Putty，Xshell，SecureCRT）
       连接主机操作了

    3、git的安装
       sudo apt-get install git
       
    4、gcc的安装
       sudo apt-get install gcc

    5、curl的安装
       sudo apt-get install curl

    6、vim的安装
       sudo apt-get install vim

    7、emacs的安装
       sudo apt-get install emacs

    8、fish shell的安装
        sudo apt-get install fish
       （apt-get install 方式安装该步应该自动完成）
        which fish
        sudo vim /etc/shells
        /usr/bin/fish

    9、修改系统时区
       sudo -i cp /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime
       sudo apt-get install ntpdate
       sudo ntpdate cn.pool.ntp.org
       sudo hwclock --systohc

    10、配置中文字符集环境
       sudo vim /var/lib/locales/supported.d/local
       en_US.UTF-8 UTF-8
       zh_CN.UTF-8 UTF-8

       生成相关的locales
       sudo -i locale-gen

       修改系统默认字符
       sudo -i vim /etc/default/locale
       LANG="zh_CN.UTF-8"
       LANGUAGE="zh_CN:"
       LC_ALL="zh_CN.UTF-8"
       
    
    # 针对每个普通用户
    10、oh-my-fish 安装 (注意必须是fish 2.2.0 以上版本)
        修改用户的登录shell，保存重新登录
        sudo vim /etc/passwd
        carhj:x:1000:1000:ubuntu-16.04-server-amd64,,,:/home/carhj:/usr/bin/fish

        安装 fish shell 的配置 oh-my-fish
        curl -L github.com/oh-my-fish/oh-my-fish/raw/master/bin/install | fish

        fish shell 的配置文件在当前用户目录下 ~/.config/fish/config.fish
        如果没有该文件，新建一个该同名文件

    11、开启终端256色
        vim ~/.config/fish/config.fish
	set -x TERM xterm-256color 



二、开发语言的安装（go语言）
    1、golang的安装
       sudo apt-get install golang

    2、根据登录shell不同配置golang的运行环境
       fish shell:
       vim ~/.config/fish/config.fish
       set -x GOPATH /home/carhj/goprojects



       bash shell:
       TODO


三、emacs的配置
    1、prelude版本的emacs配置安装
       curl -L https://git.io/epre | sh

    2、aspell的安装
       sudo apt-get install aspell

    3、ispell的安装
       sudo apt-get install ispell

    4、修改elpa的数据源为国内镜像
       vi ~/.emacs.d/core/prelude-packages.el
       (setq package-archives
           '(("melpa-cn" . "http://elpa.zilongshanren.com/melpa/")
           ("org-cn"   . "http://elpa.zilongshanren.com/org/")
           ("gnu-cn"   . "http://elpa.zilongshanren.com/gnu/")))
       cp prelude-packages.el  ~/.emacs.d/core/prelude-packages.el

    5、配置ssh客户端连接超时（远程连接tramp容易卡住很久的了）
       sudo vim /etc/ssh/ssh_config
       Host host.does.not.exist
       ConnectTimeout=1

    6、配置emacs加载的模块
       cp prelude-modules.el  ~/.emacs.d/

    7、配置个人自己的emacs初始化文件到prelude工程中去
       cp my@prelude.el ~/.emacs.d/personal/


    8、不加任何参数启动emacs，调试排错（常见问题如下：）
           > emacs

       查看 Compile-Log 搜素Error，查看错误

       问题1:
       imenu-anywhere.el:230:1:Error: Autoloading failed to define function helm-build-sync-source
       安装 helm-core 插件包
       M-x list-packages ->helm-core->i->x

       重新安装 imenu-anywhere 插件包
       M-x list-packages ->imenu-anywhere ->Enter ->d ->x（先删除）
       M-x list-packages ->imenu-anywhere ->Enter ->i ->x（再删除）


       问题2:
       ad-handle-definition: `ido-completing-read' got redefined  一直卡住很久应该是远程连接tramp卡住的了
       修改ssh客户端配置文件（让其超时返回）
       sudo vim /etc/ssh/ssh_config
       Host host.does.not.exist
       ConnectTimeout=1

       问题3:
       File error: Cannot open load file, no such file or directory, neotree
       安装 neotree 插件包
       M-x list-packages ->neotree->i->x

       问题4:
       Error enabling Flyspell mode:
       (Error: No word lists can be found for the language "zh_CN".)
       应该是没有中文字典包，所以直接不让检查中文，只检查英文


