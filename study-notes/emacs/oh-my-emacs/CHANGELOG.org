#+TITLE: Oh My Emacs ChangeLog

* v0.3

** Refactoring
   - split ome files to core and modules

** core
   - By default, use git shallow clone for el-get to save time and bandwidth.
   - Upgrade the builtin =org-mode= to latest 8.x branch.
   - Enhance =ome-load= and =ome-install= function.
   - =ome-package-list-to-org-table= function to get a list of installed
     el-get packages in org-mode format.
   - Improve compatibility for Mac OS X.

** ome-completion module
   - Enable filename completion in =text-mode=, =org-mode= and =prog-mode=.

** ome-cc module
   - Auto-complete support for C/C++ macros

** ome-experimental module
   - Put some unstable useful package in ome-experimental module, such as
     - smooth-scrolling
     - hungry-delete
     - fill-column-indicator
     - doxymacs(moved out from ome-cc module)

** ome-java module
   - Integrate =emacs-eclim= for Java development.

** ome-lisp module
   - split the all-in-one ome-lisp module to
     - ome-emacs-lisp module
     - ome-common-lisp module
     - ome-clojure module
     - ome-scheme module

** ome-javascript module
   - Experimental support for JavaScript development
   - Enable the following package by default:
     - js3-mode
     - tern
     - nodejs-repl
   - Also contains some sample config code for:
     - js-comint
     - js2-mode
     - swank-js
     - skewer-mode

** ome-ocaml module
   - Minimal ocaml development support

** Miscs
   - Add =diminish=, cleanup mode line
   - Add =po-mode= for i18n/l10n work
   - Refine smartparens auto newline in cc-mode
   - =linum-mode=
     - Generally, only enable =linum-mode= in =text-mode= and =prog-mode=
     - Enable =linum-mode= in some minor mode.
   - Various doc updates
     - add CONTRIBUTING guide
     - lots of typo fix

* v0.2
** Documentation
   - Add prerequisites matrix and el-get packages matrix.

** Evil
   - add =evil-leader=
   - add =evil-surround=
   - fix evil cursor color for better compatibility with Emacs color-theme

** Completion
   - Add completion matrix to show the current status of auto-complete support
     to various programming languages.
   - add =ac-geiser=, new auto-complete backend for geiser.

** Ruby
   - Basic ruby support
     - =inf-ruby=
     - =smartparens-ruby=
     - auto-mode-alist for ruby

** ome-advanced module
   - add =expand-region.el=
   - add =ace-jump-mode=
   - add =ack-and-a-half=

** Compatibility
   - Fix a $PATH problem in Mac OS, thanks @judevc.

** Miscs
   - add =lacarte=, the interactive menubar
   - Basic flycheck support.
   - lots of typo fix.

* V0.1
** Basic settings
*** Basic stuff
   - set =tab-width= to 4
   - =uniquify= buffers with same name
   - =saveplace= and =recentf=
   - =turn-on-auto-fill= for =text-mode= and =prog-mode=
   - =global-auto-revert-mode= for monitoring file changes
   - =global-subword-mode= for better code navigation
   - =delete-trailing-whitespace= before save.
   - other convenient settings such as =yes-or-no-p= prompt, bell rings, etc.
*** GUI
   - =powerline=
   - =yascroll= for a tiny scrollbar
   - use "Monaco" font if available
   - disable menu-bar by default
   - adopt solarized color-theme

** cc-mode
- Adopt =c-context-line-break= for =(kbd "RET")=
- Toggle on hungry-delete and auto-newline
- Open ".h" file in =c++-mode= by default
- CMake file editing support
- Doxymacs support
- Cscope for code indexing
- Completion with =auto-complete-clang=

** Completion everywhere
- =M-/= for =hippie-expand=
- Enable =auto-complete= by default, together with an ac support for =pcomplete=
- Use the ubiquitous helm for minibuffer, files/buffer switch completion
  support
- Yasnippet for template insertion

** Lisp
*** Emacs Lisp
    - =turn-on-eldoc-mode= by default
    - auto-complete in ielm and eshell

*** Common Lisp
    - Adopt SLIME with a fancy default settings
    - ac-slime provide auto-complete backend
    - Out-of-box support for sbcl/ccl/clisp

*** Clojure
    - Adopt nrepl, which is similar with SLIME
    - ac-nrepl provide auto-complete backend

*** Scheme
    - Adopt geiser, which is similar with SLIME
    - Also provide a pseudo code snippet for swank-chicken if you like

** Miscs
- Enable some dangerous commands such as =narrow-to-page=, =narrow-to-region=
- Toggle on emacs server mode by default
- Adopt =rainbow-delimiters-mode= for colorful parens
- Open image and compressed files transparently
- Enable =outline-minor-mode= for =prog-mode=
- Adopt =magit= for git integration
- =global-visual-line-mode t=
- Projectile for simple project management
- Smartparens as the ultimate solution for pair management in Emacs
- Emacs-w3m for browsing html docs when you don't want to leave Emacs
- Quickrun to run code snippets instantly

** Org-mode settings
- Enable org-mode speed keys by default
- Enable =org-src-fontify-natively=
- Integrate with =htmlize= for html export, solves a conflict between htmlize
  and rainbow-delimiters-mode
- Enable cdlatex for org-mode

** Python
- Adopt elpy, the one for all solution for Python in Emacs, together with a
  comprehensive documentation

** \TeX and \LaTeX
- Use =xetex= as the default =TeX-engine= for better support for \TeX{} font
  selection and PDF export.
- Enable =outline-minor-mode= and =flyspell-mode=.
- Enable =TeX-interactive-mode=, =TeX-PDF-mode=, =TeX-fold-mode= and
  =reftex-mode=.
- Favors [[http://okular.kde.org/][Okular]] and [[https://projects.gnome.org/evince/][Evince]] as the default viewer in Linux, and fallbacks to
  =xdg-open= if both Okular and Evince is unavailable.
- =turn-on-cdlatex= with AUCTeX

** Writing
- =markdown-mode= support
