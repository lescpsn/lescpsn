#+TITLE: Oh My Emacs Ruby
#+OPTIONS: toc:2 num:nil ^:nil

This is part of [[https://github.com/xiaohanyu/oh-my-emacs][oh-my-emacs]].

* Prerequisites
  :PROPERTIES:
  :CUSTOM_ID: ruby-prerequisites
  :END:

This is a experimental prerequisites matrix. Somebody said we can convert this
type of matrix into a runnable script, however, I think it requires too much
work. Maybe [[http://www.ansibleworks.com/][ansible]] script is a good choice.

#+NAME: ruby-prerequisites-matrix
#+CAPTION: Prerequisites for ome-ruby module
| Package | Windows | Ubuntu/Debian/Mint | ArchLinux | Fedora | Mac OS X | Mandatory? |
|---------+---------+--------------------+-----------+--------+----------+------------|
| ruby    |         | ruby               | ruby      | ruby   |          | Yes        |
| [[https://github.com/sstephenson/rbenv][rbenv]]   |         | [web]              | [web]     | [web]  | [web]    | Yes        |
| pry     |         | [gem]              | [gem]     | [gem]  | [gem]    | No         |

* El-get packages
  :PROPERTIES:
  :CUSTOM_ID: ruby-el-get-packages
  :END:

#+NAME: ruby-el-get-packages
#+CAPTION: El-get packages for ome-ruby module
| Package            | Status     | Description                                                   |
|--------------------+------------+---------------------------------------------------------------|
| [[https://github.com/qoobaa/ruby-electric][ruby-electric]]      | Deprecated | [[https://github.com/Fuco1/smartparens][smartparens]] is amazing.                                       |
| [[https://github.com/adolfosousa/ruby-block.el][ruby-block]]         | Deprecated | [[https://github.com/Fuco1/smartparens][smartparens]] is amazing.                                       |
| [[https://github.com/rejeep/ruby-end][ruby-end]]           | Deprecated | [[https://github.com/Fuco1/smartparens/blob/master/smartparens-ruby.el][smartparens-ruby]] is amazing, too.                             |
| [[http://rubygems.org/gems/rcodetools][rcodetools]]         | Deprecated | Long time no update.                                          |
| [[http://www.cx4a.org/pub/auto-complete-ruby.el][auto-complete-ruby]] | Deprecated | Depends on [[http://rubygems.org/gems/rcodetools][rcodetools]].                                        |
| [[https://github.com/nonsequitur/inf-ruby][inf-ruby]]           | Required   | Ruby [[http://en.wikipedia.org/wiki/Read%25E2%2580%2593eval%25E2%2580%2593print_loop][REPL]] in Emacs.                                           |
| [[https://github.com/dgutov/robe][robe-mode]]          | Required   | Code navigation, documentation lookup and completion for Ruby |
| [[https://github.com/pd/yard-mode.el][yard-mode]]          | Required   | Emacs minor mode for editing YARD tags                        |
| [[https://github.com/Fuco1/smartparens][smartparens]]        | Required   | Smartparens is amazing.                                       |
| [[https://github.com/senny/rbenv.el][rbenv.el]]           | Required   | Emacs integration for [[https://github.com/sstephenson/rbenv][rbenv]].                                  |

* Ruby-mode
  :PROPERTIES:
  :CUSTOM_ID: ruby-mode
  :END:

The builtin =ruby-mode= in Emacs is quite simple, it just provides some simple
functions for font-locking, indentation and code navigation.

#+NAME: ruby-mode
#+BEGIN_SRC emacs-lisp
(defun ome-ruby-mode-setup ()
  ;; Ah, this huge auto-mode-alist list comes from emacs prelude
  (add-to-list 'auto-mode-alist '("\\.rake\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("Rakefile\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("\\.gemspec\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("\\.ru\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("Gemfile\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("Guardfile\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("Capfile\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("\\.thor\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("Thorfile\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("Vagrantfile\\'" . ruby-mode))
  (add-to-list 'auto-mode-alist '("\\.jbuilder\\'" . ruby-mode))
  (add-hook 'ruby-mode-hook
            (lambda ()
              (indent-guide-mode 1))))

(ome-ruby-mode-setup)
#+END_SRC

* Inf-ruby
  :PROPERTIES:
  :CUSTOM_ID: inf-ruby
  :END:

I have a dream that one day the builtin =ruby-mode= and [[https://github.com/nonsequitur/inf-ruby][inf-ruby]] will merge
together to form a new, more powerful =ruby-mode=, just like the builtin
=python-mode=.

Fortunately, inf-ruby support multiple ruby implementations in a simple
way. Oh-my-emacs will use [[http://pryrepl.org/][pry]] if available.

There still lacks a good auto-complete support, however, I think it shouldn't
be too hard to add auto-complete support by leveraging =inf-ruby-complete=
provided by =inf-ruby=.

Oh-my-emacs also bind =C-c C-z= to =run-ruby=, instead of the original
=ruby-switch-to-inf= to make the workflow smoother when you just want to
evaluate ruby code snippets.

#+NAME: inf-ruby
#+BEGIN_SRC emacs-lisp
(defun ome-inf-ruby-setup ()
  (require 'inf-ruby)
  (define-key inf-ruby-minor-mode-map (kbd "C-c C-z") 'run-ruby)
  (when (executable-find "pry")
    (add-to-list 'inf-ruby-implementations '("pry" . "pry"))
    (setq inf-ruby-default-implementation "pry")))

(ome-install 'inf-ruby)
#+END_SRC

* Robe-mode
  :PROPERTIES:
  :CUSTOM_ID: robe-mode
  :END:

#+BEGIN_QUOTE
Robe is a code assistance tool that uses a Ruby REPL subprocess with your
application or gem code loaded, to provide information about loaded classes and
modules, and where each method is defined.
#+END_QUOTE

The general work flow with [[https://github.com/dgutov/robe][robe]] is:
- start an =inf-ruby= buffer by =C-c C-z=
- =M-x robe-start=

Basic features of robe:
- Jump to method definition
- Jump to =super= or a constructor called at point
- Jump to a module or class (provided it has at least one method defined)
- Display method documentation
- Display information about method called at point using ElDoc
- Method and constant name completion

#+NAME: robe-mode
#+BEGIN_SRC emacs-lisp
(defun ome-robe-mode-setup ()
  (add-hook 'robe-mode-hook 'ac-robe-setup)
  (add-to-list 'ac-modes 'inf-ruby-mode)
  (add-hook 'inf-ruby-mode-hook 'ac-robe-setup))

(ome-install 'robe-mode)
#+END_SRC

* Smartparens-ruby
  :PROPERTIES:
  :CUSTOM_ID: smartparens-ruby
  :END:

[[https://github.com/Fuco1/smartparens][smartparens]] is amazing, which deprecates [[https://github.com/qoobaa/ruby-electric][ruby-electric]]. In fact, it is so
amazing that one single [[https://github.com/Fuco1/smartparens/blob/master/smartparens-ruby][smartparens-ruby]] deprecates other two el-get packages:
[[https://github.com/adolfosousa/ruby-block.el][ruby-block]] and [[https://github.com/rejeep/ruby-end][ruby-end]]. Just enjoy it! Thanks [[https://github.com/Fuco1/smartparens/blob/master/smartparens-ruby][Matus Goljer]] again for this
amazing, elegant package.

#+NAME: smartparens-ruby
#+BEGIN_SRC emacs-lisp
(when (require 'smartparens nil 'noerror)
  (require 'smartparens-ruby))
#+END_SRC

* Rbenv
  :PROPERTIES:
  :CUSTOM_ID: rbenv
  :END:

Ruby is an actively evolving language. Things often happen when you need to
support multiple versions of ruby with your code base. So you need tools to
install, and switch between multiple versions of ruby. [[http://rvm.io/][RVM]] is one of the most
famous ruby version manager tools, however, IMHO, it's just too bloated. I
prefer [[https://github.com/sstephenson/rbenv][rbenv]] for now. There're other [[https://github.com/postmodern/chruby#alternatives][choices]], but rbenv has [[https://github.com/senny/rbenv.el][emacs support]], and
various [[https://github.com/sstephenson/rbenv/wiki/Plugins][plugins]], which will make your life much more easier.

Generally, you can get rbenv via plain old =git clone=, if you are a Mac OS X
user, you can get it via homebrew, check the [[https://github.com/sstephenson/rbenv#installation][installation]] guide. When you get
rbenv via homebrew, we need to do some tricks to make [[https://github.com/senny/rbenv.el][rbenv.el]] work in
emacs. So I recommand you install rbenv via direct ~git clone~.

[[https://github.com/sstephenson/ruby-build][ruby-build]] is one of the most important plugins of rbenv, actually, you can
consider it as a sister project of rbenv. Just as its name, it helps to install
ruby. Please do read its [[https://github.com/sstephenson/ruby-build/wiki][wiki]] to ensure your have necessary packages installed
before you do your ruby-build.

By default, rbenv will designate the global ruby version via
=~/.rbenv/version=, so if =(file-exists-p "~/.rbenv/version")=, we know that
the user has installed and configured rbenv successfully, then we can install
emacs rbenv support. By default, oh-my-emacs enables =global-rbenv-mode=.

#+NAME: rbenv
#+BEGIN_SRC emacs-lisp
(defun ome-rbenv-setup ()
  ;; when user installed rbenv via homebrew on Mac OS X
  (when (and (memq window-system '(mac ns))
             (file-exists-p "/usr/local/opt/rbenv"))
    (setq rbenv-installation-dir "/usr/local/opt/rbenv"))
  (require 'rbenv)
  (global-rbenv-mode t))

(when (file-exists-p "~/.rbenv/version")
  (ome-install 'rbenv))
#+END_SRC

* Yard-mode
  :PROPERTIES:
  :CUSTOM_ID: yard-mode
  :END:

[[https://github.com/pd/yard-mode.el][yard-mode]] is a minor mode that provide rudimentary support for fontifying [[http://yardoc.org/][YARD]]
tags and directives in ruby comments.

#+NAME: yard-mode
#+BEGIN_SRC emacs-lisp
(defun ome-yard-mode-setup ()
  (add-hook 'ruby-mode-hook 'yard-mode)
  (add-hook 'ruby-mode-hook 'eldoc-mode))

(ome-install 'yard-mode)
#+END_SRC

* Todo
- Ah, rails support, lots of works, so, as it always said, any help will be
  appreciated.
