// Code generated by protoc-gen-go.
// source: feedback.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Feedback struct {
	ID          int64  `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	UUID        string `protobuf:"bytes,2,opt,name=UUID,json=uUID" json:"UUID,omitempty"`
	CreatedAt   string `protobuf:"bytes,3,opt,name=CreatedAt,json=createdAt" json:"CreatedAt,omitempty"`
	Suggest     string `protobuf:"bytes,4,opt,name=Suggest,json=suggest" json:"Suggest,omitempty"`
	User        *User  `protobuf:"bytes,5,opt,name=User,json=user" json:"User,omitempty"`
	UserUUID    string `protobuf:"bytes,6,opt,name=UserUUID,json=userUUID" json:"UserUUID,omitempty"`
	ConnectInfo string `protobuf:"bytes,7,opt,name=ConnectInfo,json=connectInfo" json:"ConnectInfo,omitempty"`
	From        int32  `protobuf:"varint,8,opt,name=From,json=from" json:"From,omitempty"`
}

func (m *Feedback) Reset()                    { *m = Feedback{} }
func (m *Feedback) String() string            { return proto1.CompactTextString(m) }
func (*Feedback) ProtoMessage()               {}
func (*Feedback) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Feedback) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto1.RegisterType((*Feedback)(nil), "proto.Feedback")
}

func init() { proto1.RegisterFile("feedback.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x8e, 0x41, 0x6a, 0x86, 0x30,
	0x10, 0x85, 0xd1, 0x3f, 0xfe, 0xc6, 0x09, 0xb8, 0x98, 0x55, 0x90, 0x42, 0xa5, 0xab, 0xae, 0x5c,
	0xb4, 0x27, 0x28, 0x8a, 0xe0, 0xd6, 0xe2, 0x01, 0x34, 0x46, 0x29, 0xa5, 0xa6, 0xc4, 0xe4, 0xb0,
	0xbd, 0x4d, 0xc7, 0x68, 0xe9, 0x26, 0x99, 0xf7, 0xbd, 0xe4, 0xbd, 0x81, 0x7c, 0xd1, 0x7a, 0x9e,
	0x46, 0xf5, 0x59, 0x7d, 0x5b, 0xe3, 0x0c, 0x26, 0xe1, 0x2a, 0xc0, 0xef, 0xda, 0x9e, 0xe8, 0xe9,
	0x27, 0x02, 0xde, 0x5e, 0xaf, 0x30, 0x87, 0xb8, 0x6b, 0x64, 0x54, 0x46, 0xcf, 0xb7, 0x3e, 0xfe,
	0x68, 0x10, 0x81, 0x0d, 0x03, 0x91, 0x98, 0x48, 0xd6, 0x33, 0x4f, 0x33, 0x3e, 0x40, 0x56, 0x5b,
	0x3d, 0x3a, 0x3d, 0xbf, 0x39, 0x79, 0x0b, 0x46, 0xa6, 0xfe, 0x00, 0x4a, 0x48, 0xdf, 0xfd, 0xba,
	0xea, 0xdd, 0x49, 0x16, 0xbc, 0x74, 0x3f, 0x25, 0x3e, 0x52, 0x16, 0xd5, 0xca, 0x84, 0xb0, 0x78,
	0x11, 0x67, 0x7d, 0x75, 0x20, 0x0a, 0xa6, 0x13, 0x0b, 0xe0, 0x87, 0x0a, 0x85, 0xf7, 0xf0, 0x97,
	0xfb, 0x4b, 0x63, 0x09, 0xa2, 0x36, 0xdb, 0xa6, 0x95, 0xeb, 0xb6, 0xc5, 0xc8, 0x34, 0xd8, 0x42,
	0xfd, 0xa3, 0x63, 0xd5, 0xd6, 0x9a, 0x2f, 0xc9, 0xc9, 0x4a, 0x7a, 0xb6, 0xd0, 0x3c, 0xdd, 0x43,
	0xc7, 0xeb, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xdd, 0xf2, 0xe0, 0x07, 0x01, 0x00, 0x00,
}
