// Code generated by protoc-gen-go.
// source: sms.proto
// DO NOT EDIT!

/*
Package sms is a generated protocol buffer package.

It is generated from these files:
	sms.proto

It has these top-level messages:
	RegisterSMSRequest
	GenericSMSValidationRequest
	SMSResponse
	SMSResult
*/
package sms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterSMSRequest struct {
	Mobile string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *RegisterSMSRequest) Reset()                    { *m = RegisterSMSRequest{} }
func (m *RegisterSMSRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterSMSRequest) ProtoMessage()               {}
func (*RegisterSMSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GenericSMSValidationRequest struct {
	UserUUID string `protobuf:"bytes,1,opt,name=userUUID" json:"userUUID,omitempty"`
	Mobile   string `protobuf:"bytes,2,opt,name=mobile" json:"mobile,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *GenericSMSValidationRequest) Reset()                    { *m = GenericSMSValidationRequest{} }
func (m *GenericSMSValidationRequest) String() string            { return proto.CompactTextString(m) }
func (*GenericSMSValidationRequest) ProtoMessage()               {}
func (*GenericSMSValidationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SMSResponse struct {
	Success     bool       `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Error       string     `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	RequestCode string     `protobuf:"bytes,3,opt,name=request_code,json=requestCode" json:"request_code,omitempty"`
	SmsResult   *SMSResult `protobuf:"bytes,4,opt,name=sms_result,json=smsResult" json:"sms_result,omitempty"`
}

func (m *SMSResponse) Reset()                    { *m = SMSResponse{} }
func (m *SMSResponse) String() string            { return proto.CompactTextString(m) }
func (*SMSResponse) ProtoMessage()               {}
func (*SMSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SMSResponse) GetSmsResult() *SMSResult {
	if m != nil {
		return m.SmsResult
	}
	return nil
}

type SMSResult struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Detail  string `protobuf:"bytes,3,opt,name=detail" json:"detail,omitempty"`
}

func (m *SMSResult) Reset()                    { *m = SMSResult{} }
func (m *SMSResult) String() string            { return proto.CompactTextString(m) }
func (*SMSResult) ProtoMessage()               {}
func (*SMSResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*RegisterSMSRequest)(nil), "sms.RegisterSMSRequest")
	proto.RegisterType((*GenericSMSValidationRequest)(nil), "sms.GenericSMSValidationRequest")
	proto.RegisterType((*SMSResponse)(nil), "sms.SMSResponse")
	proto.RegisterType((*SMSResult)(nil), "sms.SMSResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for SMSServices service

type SMSServicesClient interface {
	SendRegisterSMS(ctx context.Context, in *RegisterSMSRequest, opts ...client.CallOption) (*SMSResponse, error)
	SendGenericSMS(ctx context.Context, in *GenericSMSValidationRequest, opts ...client.CallOption) (*SMSResponse, error)
}

type sMSServicesClient struct {
	c           client.Client
	serviceName string
}

func NewSMSServicesClient(serviceName string, c client.Client) SMSServicesClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "sms"
	}
	return &sMSServicesClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *sMSServicesClient) SendRegisterSMS(ctx context.Context, in *RegisterSMSRequest, opts ...client.CallOption) (*SMSResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SMSServices.SendRegisterSMS", in)
	out := new(SMSResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sMSServicesClient) SendGenericSMS(ctx context.Context, in *GenericSMSValidationRequest, opts ...client.CallOption) (*SMSResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SMSServices.SendGenericSMS", in)
	out := new(SMSResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SMSServices service

type SMSServicesHandler interface {
	SendRegisterSMS(context.Context, *RegisterSMSRequest, *SMSResponse) error
	SendGenericSMS(context.Context, *GenericSMSValidationRequest, *SMSResponse) error
}

func RegisterSMSServicesHandler(s server.Server, hdlr SMSServicesHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&SMSServices{hdlr}, opts...))
}

type SMSServices struct {
	SMSServicesHandler
}

func (h *SMSServices) SendRegisterSMS(ctx context.Context, in *RegisterSMSRequest, out *SMSResponse) error {
	return h.SMSServicesHandler.SendRegisterSMS(ctx, in, out)
}

func (h *SMSServices) SendGenericSMS(ctx context.Context, in *GenericSMSValidationRequest, out *SMSResponse) error {
	return h.SMSServicesHandler.SendGenericSMS(ctx, in, out)
}

func init() { proto.RegisterFile("sms.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0x4d, 0x4b, 0xfb, 0x40,
	0x10, 0xc6, 0xff, 0x7d, 0xfd, 0xb7, 0x13, 0xa9, 0x32, 0x88, 0x86, 0x7a, 0xa9, 0x39, 0x79, 0xb1,
	0x87, 0x7a, 0x17, 0x41, 0x51, 0x3c, 0x78, 0x30, 0xa1, 0x5e, 0x4b, 0x9a, 0x0c, 0x65, 0x21, 0xc9,
	0xd6, 0xdd, 0x8d, 0x5f, 0xc3, 0x93, 0xdf, 0xd7, 0x7d, 0x4b, 0x0c, 0x58, 0xbc, 0xcd, 0xf3, 0xb0,
	0x79, 0xe6, 0x37, 0x33, 0x81, 0xa9, 0x2c, 0xe5, 0x72, 0x2f, 0xb8, 0xe2, 0x38, 0xd0, 0x65, 0x74,
	0x07, 0x18, 0xd3, 0x8e, 0x49, 0x45, 0x22, 0x79, 0x49, 0x62, 0x7a, 0xaf, 0x49, 0x2a, 0x3c, 0x83,
	0x71, 0xc9, 0xb7, 0xac, 0xa0, 0xb0, 0xb7, 0xe8, 0x5d, 0x4d, 0x63, 0xaf, 0x10, 0x61, 0x98, 0xf1,
	0x9c, 0xc2, 0xbe, 0x75, 0x6d, 0x1d, 0x11, 0x5c, 0x3c, 0x51, 0x45, 0x82, 0x65, 0x3a, 0xe0, 0x2d,
	0x2d, 0x58, 0x9e, 0x2a, 0xc6, 0xab, 0x26, 0x6a, 0x0e, 0x93, 0x5a, 0x92, 0x58, 0xaf, 0x9f, 0x1f,
	0x7c, 0x58, 0xab, 0x3b, 0x6d, 0xfa, 0x07, 0xdb, 0x0c, 0x3a, 0x6d, 0x3e, 0x7b, 0x10, 0x58, 0x42,
	0xb9, 0xe7, 0x95, 0x24, 0x0c, 0xe1, 0xbf, 0xac, 0xb3, 0x8c, 0xa4, 0xb4, 0xb1, 0x93, 0xb8, 0x91,
	0x78, 0x0a, 0x23, 0x12, 0x82, 0x0b, 0x1f, 0xea, 0x04, 0x5e, 0xc2, 0x91, 0x70, 0x48, 0x9b, 0x4e,
	0x76, 0xe0, 0xbd, 0x7b, 0x6d, 0xe1, 0x35, 0x80, 0x5e, 0xc9, 0x46, 0x90, 0xac, 0x0b, 0x15, 0x0e,
	0xf5, 0x83, 0x60, 0x35, 0x5b, 0x9a, 0x85, 0xb9, 0xc6, 0xda, 0x8d, 0xcd, 0xfe, 0x5c, 0x19, 0xbd,
	0xc2, 0xb4, 0xf5, 0x5b, 0x64, 0xc3, 0x32, 0x72, 0xc8, 0x06, 0xb1, 0xd4, 0x40, 0xe9, 0xae, 0x99,
	0xaf, 0x91, 0x66, 0xf0, 0x9c, 0x54, 0xca, 0x0a, 0x8f, 0xe1, 0xd5, 0xea, 0xcb, 0x0d, 0x99, 0x90,
	0xf8, 0x60, 0x7a, 0x16, 0xbc, 0x85, 0xe3, 0x84, 0xaa, 0xbc, 0x73, 0x21, 0x3c, 0xb7, 0x40, 0xbf,
	0x6f, 0x36, 0x3f, 0xe9, 0x90, 0xda, 0x15, 0x45, 0xff, 0xf0, 0x11, 0x66, 0xe6, 0xfb, 0x9f, 0xfb,
	0xe0, 0xc2, 0xbe, 0xfa, 0xe3, 0x60, 0x87, 0x72, 0xb6, 0x63, 0xfb, 0xc7, 0xdc, 0x7c, 0x07, 0x00,
	0x00, 0xff, 0xff, 0xee, 0xa6, 0xbc, 0x6c, 0x3e, 0x02, 0x00, 0x00,
}
